<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ghm.giftcardfleamarket.domain.purchase.mapper.PurchaseMapper">

	<resultMap id="purchaseResultMap" type="Purchase">
		<result property="saleId" column="sale_id"/>
		<result property="itemId" column="item_id"/>
		<result property="useStatus" column="use_status"/>
		<result property="boughtAt" column="bought_at"/>
		<result property="usedAt" column="used_at"/>
		<result property="updatedAt" column="updated_at"/>
	</resultMap>

	<insert id="insertPurchaseGiftCard" parameterType="Purchase">
		INSERT INTO purchase(sale_id, item_id, buyer_id, price, bought_at)
		VALUES (#{saleId}, #{itemId}, #{buyerId}, #{price}, #{boughtAt})
	</insert>

	<select id="selectMyAvailableGiftCards" parameterType="map" resultMap="purchaseResultMap">
		SELECT P.sale_id, P.item_id, P.price
		FROM purchase P
            INNER JOIN sale S
            ON P.sale_id = S.id AND S.expiration_status = 0
		WHERE P.buyer_id = #{userId} AND P.use_status = 0
		ORDER BY S.expiration_date ASC
		LIMIT #{pageSize} OFFSET #{offset}
	</select>

    <select id="selectMyUsedOrExpiredGiftCards" parameterType="map" resultMap="purchaseResultMap">
        SELECT P.sale_id, P.item_id, P.price, P.use_status, P.used_at
        FROM purchase
            P JOIN sale S
            ON P.sale_id = S.id
        WHERE P.buyer_id = #{userId}
        AND P.use_status = 1
        OR S.expiration_status = 1
        ORDER BY P.used_at, S.expiration_date ASC
        LIMIT #{pageSize} OFFSET #{offset}
    </select>

    <select id="hasMyAvailablePurchaseInfo" parameterType="map" resultType="boolean">
        SELECT EXISTS
        (
            SELECT 1
            FROM purchase
            WHERE buyer_id = #{userId}
            AND id = #{purchaseId}
            AND use_status = 0
        )
    </select>

	<select id="selectMyAvailableGiftCardDetails" parameterType="Long" resultMap="purchaseResultMap">
		SELECT P.sale_id, P.item_id, P.price, P.bought_at
		FROM purchase P
		    INNER JOIN sale S
		    ON P.sale_id = S.id AND S.expiration_status = 0
		WHERE P.id = #{purchaseId} AND P.use_status = 0
	</select>

    <update id="updateUseStatus" parameterType="Long">
        UPDATE purchase
        SET use_status = 1, used_at = NOW()
        WHERE id = #{purchaseId} AND use_status = 0
    </update>

</mapper>